generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model Tenant {
    id        String    @id @default(uuid())
    name      String
    createdAt DateTime  @default(now())
    updatedAt DateTime  @updatedAt
    schools   School[]
    users     User[]
    students  Student[]
    teachers  Teacher[]
    Staff     Staff[]
}

model School {
    id        String    @id @default(uuid())
    name      String
    tenantId  String
    tenant    Tenant    @relation(fields: [tenantId], references: [id])
    slug      String
    createdAt DateTime  @default(now())
    updatedAt DateTime  @updatedAt
    students  Student[]
    teachers  Teacher[]
    Staff     Staff[]
}

model User {
    id        String   @id @default(uuid())
    email     String   @unique
    password  String
    tenantId  String
    tenant    Tenant   @relation(fields: [tenantId], references: [id])
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model Student {
    id        String   @id @default(uuid())
    name      String
    email     String   @unique
    password  String
    tenantId  String
    tenant    Tenant   @relation(fields: [tenantId], references: [id])
    schoolId  String
    school    School   @relation(fields: [schoolId], references: [id])
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model Teacher {
    id        String   @id @default(uuid())
    name      String
    email     String   @unique
    password  String
    tenantId  String
    tenant    Tenant   @relation(fields: [tenantId], references: [id])
    schoolId  String
    school    School   @relation(fields: [schoolId], references: [id])
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model Staff {
    id        String   @id @default(uuid())
    name      String
    email     String   @unique
    password  String
    tenantId  String
    tenant    Tenant   @relation(fields: [tenantId], references: [id])
    schoolId  String?
    school    School?  @relation(fields: [schoolId], references: [id])
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}
